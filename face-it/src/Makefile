#############################################################################
# Makefile for building: src
# Generated by qmake (2.01a) (Qt 4.4.1) on: Mon Aug 25 18:37:09 2008
# Project:  src.pro
# Template: app
# Command: /usr/bin/qmake-qt4 -unix -o Makefile src.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_XML_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtXml -I/usr/include/qt4/QtXml -I/usr/include/qt4 -I. -I. -I.
LINK          = g++
LFLAGS        = -Wl,--no-undefined
LIBS          = $(SUBLIBS)  -L/usr/lib -lMagick++ -lQtXml -lQtGui -lQtCore -lpthread
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -sf
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = backpropagation.cpp \
		BadPathEx.cpp \
		cpucount.cpp \
		errorsignalcalculator.cpp \
		errorsignalthread.cpp \
		exception.cpp \
		ImageFeeder.cpp \
		layer.cpp \
		main.cpp \
		mainscreen.cpp \
		network.cpp \
		networkeditor.cpp \
		neuron.cpp \
		NullParamEx.cpp \
		qxmlpersistance.cpp \
		threaddispatcher.cpp \
		weightchanger.cpp \
		weightchangingthread.cpp \
		progress.cpp \
		TrainingImageContainer.cpp moc_backpropagation.cpp \
		moc_errorsignalthread.cpp \
		moc_mainscreen.cpp \
		moc_networkeditor.cpp \
		moc_threaddispatcher.cpp \
		moc_weightchangingthread.cpp \
		moc_progress.cpp
OBJECTS       = backpropagation.o \
		BadPathEx.o \
		cpucount.o \
		errorsignalcalculator.o \
		errorsignalthread.o \
		exception.o \
		ImageFeeder.o \
		layer.o \
		main.o \
		mainscreen.o \
		network.o \
		networkeditor.o \
		neuron.o \
		NullParamEx.o \
		qxmlpersistance.o \
		threaddispatcher.o \
		weightchanger.o \
		weightchangingthread.o \
		progress.o \
		TrainingImageContainer.o \
		moc_backpropagation.o \
		moc_errorsignalthread.o \
		moc_mainscreen.o \
		moc_networkeditor.o \
		moc_threaddispatcher.o \
		moc_weightchangingthread.o \
		moc_progress.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		src.pro
QMAKE_TARGET  = src
DESTDIR       = 
TARGET        = src

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_gui.h ui_networkeditor.h ui_progress.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: src.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/lib/libQtXml.prl \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -unix -o Makefile src.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/lib/libQtXml.prl:
/usr/lib/libQtGui.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile src.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/src1.0.0 || $(MKDIR) .tmp/src1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/src1.0.0/ && $(COPY_FILE) --parents backpropagation.h BadPathEx.h cpucount.h errorsignalcalculator.h errorsignalthread.h exception.h ImageFeeder.h layer.h mainscreen.h network.h network_interface.h networkeditor.h neuron.h NullParamEx.h qxmlpersistance.h threaddispatcher.h weightchanger.h weightchangingthread.h progress.h TrainingImageContainer.h .tmp/src1.0.0/ && $(COPY_FILE) --parents backpropagation.cpp BadPathEx.cpp cpucount.cpp errorsignalcalculator.cpp errorsignalthread.cpp exception.cpp ImageFeeder.cpp layer.cpp main.cpp mainscreen.cpp network.cpp networkeditor.cpp neuron.cpp NullParamEx.cpp qxmlpersistance.cpp threaddispatcher.cpp weightchanger.cpp weightchangingthread.cpp progress.cpp TrainingImageContainer.cpp .tmp/src1.0.0/ && $(COPY_FILE) --parents gui.ui networkeditor.ui progress.ui .tmp/src1.0.0/ && (cd `dirname .tmp/src1.0.0` && $(TAR) src1.0.0.tar src1.0.0 && $(COMPRESS) src1.0.0.tar) && $(MOVE) `dirname .tmp/src1.0.0`/src1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/src1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_backpropagation.cpp moc_errorsignalthread.cpp moc_mainscreen.cpp moc_networkeditor.cpp moc_threaddispatcher.cpp moc_weightchangingthread.cpp moc_progress.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_backpropagation.cpp moc_errorsignalthread.cpp moc_mainscreen.cpp moc_networkeditor.cpp moc_threaddispatcher.cpp moc_weightchangingthread.cpp moc_progress.cpp
moc_backpropagation.cpp: network.h \
		layer.h \
		neuron.h \
		exception.h \
		errorsignalcalculator.h \
		cpucount.h \
		errorsignalthread.h \
		threaddispatcher.h \
		weightchanger.h \
		weightchangingthread.h \
		backpropagation.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) backpropagation.h -o moc_backpropagation.cpp

moc_errorsignalthread.cpp: layer.h \
		neuron.h \
		exception.h \
		errorsignalthread.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) errorsignalthread.h -o moc_errorsignalthread.cpp

moc_mainscreen.cpp: ui_gui.h \
		network.h \
		layer.h \
		neuron.h \
		exception.h \
		qxmlpersistance.h \
		NullParamEx.h \
		networkeditor.h \
		ui_networkeditor.h \
		TrainingImageContainer.h \
		backpropagation.h \
		errorsignalcalculator.h \
		cpucount.h \
		errorsignalthread.h \
		threaddispatcher.h \
		weightchanger.h \
		weightchangingthread.h \
		progress.h \
		ui_progress.h \
		ImageFeeder.h \
		mainscreen.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) mainscreen.h -o moc_mainscreen.cpp

moc_networkeditor.cpp: ui_networkeditor.h \
		network.h \
		layer.h \
		neuron.h \
		exception.h \
		TrainingImageContainer.h \
		backpropagation.h \
		errorsignalcalculator.h \
		cpucount.h \
		errorsignalthread.h \
		threaddispatcher.h \
		weightchanger.h \
		weightchangingthread.h \
		qxmlpersistance.h \
		NullParamEx.h \
		progress.h \
		ui_progress.h \
		networkeditor.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) networkeditor.h -o moc_networkeditor.cpp

moc_threaddispatcher.cpp: threaddispatcher.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) threaddispatcher.h -o moc_threaddispatcher.cpp

moc_weightchangingthread.cpp: layer.h \
		neuron.h \
		exception.h \
		weightchangingthread.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) weightchangingthread.h -o moc_weightchangingthread.cpp

moc_progress.cpp: ui_progress.h \
		progress.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) progress.h -o moc_progress.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_gui.h ui_networkeditor.h ui_progress.h
compiler_uic_clean:
	-$(DEL_FILE) ui_gui.h ui_networkeditor.h ui_progress.h
ui_gui.h: gui.ui
	/usr/bin/uic-qt4 gui.ui -o ui_gui.h

ui_networkeditor.h: networkeditor.ui
	/usr/bin/uic-qt4 networkeditor.ui -o ui_networkeditor.h

ui_progress.h: progress.ui
	/usr/bin/uic-qt4 progress.ui -o ui_progress.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 

####### Compile

backpropagation.o: backpropagation.cpp backpropagation.h \
		network.h \
		layer.h \
		neuron.h \
		exception.h \
		errorsignalcalculator.h \
		cpucount.h \
		errorsignalthread.h \
		threaddispatcher.h \
		weightchanger.h \
		weightchangingthread.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o backpropagation.o backpropagation.cpp

BadPathEx.o: BadPathEx.cpp BadPathEx.h \
		exception.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o BadPathEx.o BadPathEx.cpp

cpucount.o: cpucount.cpp cpucount.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cpucount.o cpucount.cpp

errorsignalcalculator.o: errorsignalcalculator.cpp errorsignalcalculator.h \
		cpucount.h \
		network.h \
		layer.h \
		neuron.h \
		exception.h \
		errorsignalthread.h \
		threaddispatcher.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o errorsignalcalculator.o errorsignalcalculator.cpp

errorsignalthread.o: errorsignalthread.cpp errorsignalthread.h \
		layer.h \
		neuron.h \
		exception.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o errorsignalthread.o errorsignalthread.cpp

exception.o: exception.cpp exception.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o exception.o exception.cpp

ImageFeeder.o: ImageFeeder.cpp ImageFeeder.h \
		exception.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ImageFeeder.o ImageFeeder.cpp

layer.o: layer.cpp layer.h \
		neuron.h \
		exception.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o layer.o layer.cpp

main.o: main.cpp NullParamEx.h \
		exception.h \
		BadPathEx.h \
		mainscreen.h \
		ui_gui.h \
		network.h \
		layer.h \
		neuron.h \
		qxmlpersistance.h \
		networkeditor.h \
		ui_networkeditor.h \
		TrainingImageContainer.h \
		backpropagation.h \
		errorsignalcalculator.h \
		cpucount.h \
		errorsignalthread.h \
		threaddispatcher.h \
		weightchanger.h \
		weightchangingthread.h \
		progress.h \
		ui_progress.h \
		ImageFeeder.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

mainscreen.o: mainscreen.cpp mainscreen.h \
		ui_gui.h \
		network.h \
		layer.h \
		neuron.h \
		exception.h \
		qxmlpersistance.h \
		NullParamEx.h \
		networkeditor.h \
		ui_networkeditor.h \
		TrainingImageContainer.h \
		backpropagation.h \
		errorsignalcalculator.h \
		cpucount.h \
		errorsignalthread.h \
		threaddispatcher.h \
		weightchanger.h \
		weightchangingthread.h \
		progress.h \
		ui_progress.h \
		ImageFeeder.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainscreen.o mainscreen.cpp

network.o: network.cpp network.h \
		layer.h \
		neuron.h \
		exception.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o network.o network.cpp

networkeditor.o: networkeditor.cpp networkeditor.h \
		ui_networkeditor.h \
		network.h \
		layer.h \
		neuron.h \
		exception.h \
		TrainingImageContainer.h \
		backpropagation.h \
		errorsignalcalculator.h \
		cpucount.h \
		errorsignalthread.h \
		threaddispatcher.h \
		weightchanger.h \
		weightchangingthread.h \
		qxmlpersistance.h \
		NullParamEx.h \
		progress.h \
		ui_progress.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o networkeditor.o networkeditor.cpp

neuron.o: neuron.cpp neuron.h \
		exception.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o neuron.o neuron.cpp

NullParamEx.o: NullParamEx.cpp NullParamEx.h \
		exception.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o NullParamEx.o NullParamEx.cpp

qxmlpersistance.o: qxmlpersistance.cpp qxmlpersistance.h \
		network.h \
		layer.h \
		neuron.h \
		exception.h \
		NullParamEx.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qxmlpersistance.o qxmlpersistance.cpp

threaddispatcher.o: threaddispatcher.cpp threaddispatcher.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o threaddispatcher.o threaddispatcher.cpp

weightchanger.o: weightchanger.cpp weightchanger.h \
		threaddispatcher.h \
		weightchangingthread.h \
		layer.h \
		neuron.h \
		exception.h \
		network.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o weightchanger.o weightchanger.cpp

weightchangingthread.o: weightchangingthread.cpp weightchangingthread.h \
		layer.h \
		neuron.h \
		exception.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o weightchangingthread.o weightchangingthread.cpp

progress.o: progress.cpp progress.h \
		ui_progress.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o progress.o progress.cpp

TrainingImageContainer.o: TrainingImageContainer.cpp TrainingImageContainer.h \
		exception.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o TrainingImageContainer.o TrainingImageContainer.cpp

moc_backpropagation.o: moc_backpropagation.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_backpropagation.o moc_backpropagation.cpp

moc_errorsignalthread.o: moc_errorsignalthread.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_errorsignalthread.o moc_errorsignalthread.cpp

moc_mainscreen.o: moc_mainscreen.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainscreen.o moc_mainscreen.cpp

moc_networkeditor.o: moc_networkeditor.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_networkeditor.o moc_networkeditor.cpp

moc_threaddispatcher.o: moc_threaddispatcher.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_threaddispatcher.o moc_threaddispatcher.cpp

moc_weightchangingthread.o: moc_weightchangingthread.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_weightchangingthread.o moc_weightchangingthread.cpp

moc_progress.o: moc_progress.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_progress.o moc_progress.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

